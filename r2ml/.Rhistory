f (!require(devtools)) library(devtools)
install_github("madlogos/recharts")；
;
if (!require(devtools)) library(devtools)
install.package(devtools)
install.packages(devtools)
q()
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
set.seed(1)
x<-seq(0,1,length.out=10000)set.seed(1)
x<-seq(0,1,length.out=10000)
plot(0,0,main='cumulative distribution function',xlim=c(0,1),ylim=c(0,1),ylab='PDF')
lines(x,pbeta(x,1,0),col='red')
lines(x,pbeta(x,1,0.5),col='red')
lines(x,pbeta(x,1,0.5=0.01),col='red')
lines(x,pbeta(x,1,0.001),col='red')
lines(x,pbeta(x,1,0.01),col='red')
lines(x,pbeta(x,1,0.1),col='red')
q()
Myf<-function(x,y) {
  r<-sqrt(x^2+y^2)
  r<-10*sin(r)/r
  return(r)
}
x<-seq(-10,10,length=30)
y<-x
z<-outer(x,y,Myf)
z[is.na(z)]<-1   
persp(x,y,z,main="曲面图",theta=30,phi=30,expand=0.5) 
contour(x,y,z,nlevels=10,main="等高线图")
library(MASS)  
mu1<-0  
mu2<-0  
ss1<-10 
ss2<-10   
s12<-3  
sigma<-matrix(c(ss1,s12,s12,ss2),nrow=2,ncol=2)  
Data<-mvrnorm(n=1000,mu=c(mu1,mu2),Sigma=sigma,empirical = TRUE) 
library(mclust)
DataDens<-densityMclust(data=Data)      
par(mfrow=c(2,2),mar=c(6,4,4,1))
plot(x=DataDens,type ="persp",col=grey(level=0.8))    
plot(x=DataDens,type ="contour",col=grey(level=0)) 
install.packages()
install.packages('MASS')
install.packages('mclust')
library(MASS)  
mu1<-0  
mu2<-0  
ss1<-10 
ss2<-10   
s12<-3  
sigma<-matrix(c(ss1,s12,s12,ss2),nrow=2,ncol=2)  
Data<-mvrnorm(n=1000,mu=c(mu1,mu2),Sigma=sigma,empirical = TRUE) 
library(mclust)
DataDens<-densityMclust(data=Data)      
par(mfrow=c(2,2),mar=c(6,4,4,1))
plot(x=DataDens,type ="persp",col=grey(level=0.8))    
library(MASS)  
mu1<-0  
mu2<-0  
ss1<-10 
ss2<-10   
s12<-3  
sigma<-matrix(c(ss1,s12,s12,ss2),nrow=2,ncol=2)  
Data<-mvrnorm(n=1000,mu=c(mu1,mu2),Sigma=sigma,empirical = TRUE) 
library(mclust)
DataDens<-densityMclust(data=Data)      
par(mfrow=c(2,2),mar=c(6,4,4,1))
plot(x=DataDens,type ="persp",col=grey(level=0.8))    
ClaimData<-read.table(file="车险数据.txt",header=TRUE)
library(mclust)
ClaimDens=densityMclust(data=ClaimData[,c(1,5)])       
plot(x=ClaimDens,type = "persp",col = grey(0.8))      
plot(x=ClaimDens,data=ClaimData[,c(1,5)],type ="contour",col=grey(0.8),nlevels=20) 
getwd()
setwd('C:\\Workcode\\PL\\r2ml\\data')
ClaimData<-read.table(file="车险数据.txt",header=TRUE)
library(mclust)
ClaimDens=densityMclust(data=ClaimData[,c(1,5)])       
plot(x=ClaimDens,type = "persp",col = grey(0.8))      
install.packages('maptools')
library("maptools")
chinaMap<-readShapeSpatial("省级行政区.shp")  
xy<-sapply(slot(chinaMap, "polygons"),FUN=function(x) slot(x, "labpt")) 
xy<-t(xy)
MapFun<-function(Indices,provName,titleName){
 colT<-(max(Indices)-Indices[])/(max(Indices)-min(Indices))*100  #根据变量取值设置颜色
 Name<-as.vector(chinaMap$NAME)
 MapIndex<-sapply(Name,FUN=function(x) grep(x,provName)) #对行政区划名称进行匹配
 colPanel<-sapply(MapIndex,FUN=function(x){
  if(length(x)!=0) return(rgb(red=colT[x],green=colT[x],blue=colT[x],maxColorValue=100))
   else return(grey(1))
 })
 plot(chinaMap,panel.first = grid(),col=colPanel)
 pointLabel(xy[,1],xy[,2],labels=chinaMap$NAME,cex=0.6,col=rgb(1,0,0),doPlot=TRUE)
 title(main=titleName)  #给图加指定标题
}
Data<-read.table(file="淘宝成交指数.txt",header=TRUE,sep="")
indices<-Data[[2]]   #女装成交指数
provname<-as.vector(Data[[1]])
MapFun(indices,provname,"淘宝女装成交指数热力图")
Data<-read.table(file="高新技术进口数据.txt",header=TRUE,sep="")
indices<-Data[[5]]
provname<-as.vector(Data[[2]])
MapFun(indices,provname,"高新技术进口数据热力图")
library("maptools")
chinaMap<-readShapeSpatial(fn="省级行政区.shp")  #读取中国行政区划的shape格式数据
plot(chinaMap,panel.first = grid(),col=grey(level=0.7))
slot(object=chinaMap,name="data")  
slot(object=chinaMap,name="polygons") 
sapply(slot(objec=chinaMap,name="polygons"),FUN=function(x) slot(x,"ID"))
sapply(slot(objec=chinaMap,name="polygons"),FUN=function(x) slot(x,"area")) 
xy<-sapply(slot(objec=chinaMap,name="polygons"),FUN=function(x) slot(x,"labpt"))  
xy<-t(xy)
pointLabel(xy[,1],xy[,2],labels=chinaMap$NAME,cex=0.6,col=rgb(red=1,green=0,blue=0),doPlot=TRUE)
install.packages("maps")      
library("maps") 
data(state)
library("maptools")
chinaMap<-readShapeSpatial(fn="省级行政区.shp")  #读取中国行政区划的shape格式数据
plot(chinaMap,panel.first = grid(),col=grey(level=0.7))
slot(object=chinaMap,name="data")  
slot(object=chinaMap,name="polygons") 
sapply(slot(objec=chinaMap,name="polygons"),FUN=function(x) slot(x,"ID"))
sapply(slot(objec=chinaMap,name="polygons"),FUN=function(x) slot(x,"area")) 
xy<-sapply(slot(objec=chinaMap,name="polygons"),FUN=function(x) slot(x,"labpt"))  
xy<-t(xy)
pointLabel(xy[,1],xy[,2],labels=chinaMap$NAME,cex=0.6,col=rgb(red=1,green=0,blue=0),doPlot=TRUE)
chinaMap<-readShapeSpatial(fn="省级行政区.shp")
install.packages("wordcloud")
library("wordcloud")
wordFreq<-read.table(file="词频示例.txt",header=TRUE,sep=" ")   #读词频数据
head(wordFreq[order(wordFreq$Freq,decreasing=TRUE),])   #浏览词频最高的前6个词
set.seed(123)    #设置随机数种子
wordcloud(words=wordFreq$Word,freq=wordFreq$Freq,random.order=FALSE,min.freq=20)
chinaMap<-readShapeSpatial("省级行政区.shp")  
getwd()
setwd('C:/Workcode/PL/r2ml')
chinaMap<-readShapeSpatial("data/省级行政区.shp")  
chinaMap<-readShapeSpatial("./data/省级行政区.shp")  
q()
